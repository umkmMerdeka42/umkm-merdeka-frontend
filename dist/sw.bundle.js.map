{"version":3,"file":"sw.bundle.js","mappings":";mBAQA,QARe,CACbA,SAAU,yBACVC,YAAY,IAAIC,MAAOC,cACvBC,cAAe,wBACfC,iBAAkB,EAClBC,kBAAmB,+PCJrB,svNA6CA,QA5CoB,CACZC,gBAAe,SAACC,GAAU,4HACV,EAAKC,aAAY,OAAvB,EAAH,KACLC,OAAOF,GAAU,0CAFO,EAGhC,EAEMG,eAAc,WAAG,iHACIC,OAAOC,OAAM,OAAnB,EAAH,KAEbC,QAAO,SAACC,GAAI,OAAKA,IAASC,EAAAA,UAAiB,IAC3CC,KAAI,SAACC,GAAY,OAAKN,OAAM,OAAQM,EAAa,IAAE,0CAJjC,EAKvB,EAEMC,gBAAe,SAACC,GAAS,kIACNR,OAAOS,MAAMD,GAAQ,OAA9B,KAARE,EAAW,EAAH,MAEA,CAAF,eACkB,OAA5B,EAAKC,cAAcH,GAAS,kBACrBE,GAAQ,gCAEV,EAAKC,cAAcH,IAAQ,0CAPL,EAQ/B,EAEMX,WAAU,WAAG,0HACVG,OAAOY,KAAKR,EAAAA,aAAkB,0CADpB,EAEnB,EAEMO,cAAa,SAACH,GAAS,kIACJK,MAAML,GAAQ,OAAvB,IAARE,EAAW,EAAH,OAEuB,MAApBA,EAASI,OAAc,yCAC/BJ,GAAQ,uBAGX,EAAKK,UAAUP,GAAQ,gCACtBE,GAAQ,0CARY,EAS7B,EAEMK,UAAS,SAACP,GAAS,4HACH,EAAKX,aAAY,OAAvB,EAAH,KACLmB,IAAIR,GAAS,0CAFI,EAGzB,GCtCF,IAAMS,EAAgB,CACpB,KACA,yBACA,yBACA,yBACA,2BACA,2BACA,2BACA,2BACA,2BACA,kBACA,oBACA,kBAGFC,KAAKC,iBAAiB,WAAW,SAACC,GAChCA,EAAMC,UAAUC,EAAAA,gBAA4B,GAAD,OAAKL,IAClD,IAEAC,KAAKC,iBAAiB,YAAY,SAACC,GACjCA,EAAMC,UAAUC,EAAAA,iBAClB,IAEAJ,KAAKC,iBAAiB,SAAS,SAACC,GAC9BA,EAAMG,YAAYD,EAAAA,gBAA4BF,EAAMZ,SACtD","sources":["webpack://umkm-merdeka/./src/scripts/globals/config.js","webpack://umkm-merdeka/./src/scripts/utils/cache-helper.js","webpack://umkm-merdeka/./src/scripts/sw.js"],"sourcesContent":["const CONFIG = {\r\n  BASE_URL: 'http://localhost:5000/',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'umkm-merdeka-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'products',\r\n};\r\n\r\nexport default CONFIG;\r\n","import CONFIG from '../globals/config';\r\n\r\nconst CacheHelper = {\r\n  async cachingAppShell(requests) {\r\n    const cache = await this._openCache();\r\n    cache.addAll(requests);\r\n  },\r\n\r\n  async deleteOldCache() {\r\n    const cacheNames = await caches.keys();\r\n    cacheNames\r\n      .filter((name) => name !== CONFIG.CACHE_NAME)\r\n      .map((filteredName) => caches.delete(filteredName));\r\n  },\r\n\r\n  async revalidateCache(request) {\r\n    const response = await caches.match(request);\r\n\r\n    if (response) {\r\n      this._fetchRequest(request);\r\n      return response;\r\n    }\r\n    return this._fetchRequest(request);\r\n  },\r\n\r\n  async _openCache() {\r\n    return caches.open(CONFIG.CACHE_NAME);\r\n  },\r\n\r\n  async _fetchRequest(request) {\r\n    const response = await fetch(request);\r\n\r\n    if (!response || response.status !== 200) {\r\n      return response;\r\n    }\r\n\r\n    await this._addCache(request);\r\n    return response;\r\n  },\r\n\r\n  async _addCache(request) {\r\n    const cache = await this._openCache();\r\n    cache.add(request);\r\n  },\r\n};\r\n\r\nexport default CacheHelper;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-globals */\r\nimport CacheHelper from './utils/cache-helper';\r\n\r\nconst assetsToCache = [\r\n  './',\r\n  './icons/icon-48x48.png',\r\n  './icons/icon-72x72.png',\r\n  './icons/icon-96x96.png',\r\n  './icons/icon-128x128.png',\r\n  './icons/icon-192x192.png',\r\n  './icons/icon-384x384.png',\r\n  './icons/icon-512x512.png',\r\n  './icons/UMKM-Merdeka.png',\r\n  './app.bundle.js',\r\n  './app.webmanifest',\r\n  './sw.bundle.js',\r\n];\r\n\r\nself.addEventListener('install', (event) => {\r\n  event.waitUntil(CacheHelper.cachingAppShell([...assetsToCache]));\r\n});\r\n\r\nself.addEventListener('activate', (event) => {\r\n  event.waitUntil(CacheHelper.deleteOldCache());\r\n});\r\n\r\nself.addEventListener('fetch', (event) => {\r\n  event.respondWith(CacheHelper.revalidateCache(event.request));\r\n});\r\n"],"names":["BASE_URL","CACHE_NAME","Date","toISOString","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","cachingAppShell","requests","_openCache","addAll","deleteOldCache","caches","keys","filter","name","CONFIG","map","filteredName","revalidateCache","request","match","response","_fetchRequest","open","fetch","status","_addCache","add","assetsToCache","self","addEventListener","event","waitUntil","CacheHelper","respondWith"],"sourceRoot":""}